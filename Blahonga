import random
Antal_kolumner=9
Antal_rader=9

def print_instructions():
    print()
    print("Välkommen till Chomp. Välj en ruta och alla rutor till höger och neråt kommer att ätas.")
    print()
    print("Den som äter sista rutan blir förgiftad, lycka till!")

def print_board(board):#Skriver ut brädet utifrån funktionen update_board
    for i in board:
        print(*i)
      
def check_valid_input(player_choice, board):# Pröver alla input

    try:
        r, k=player_choice.split()
    except ValueError:
        print("Du måste välja rad först sen kolumn. Glöm inte mellandslag! ")
        print_board(board)
        return False
    try:
        r = int(r) - 1
        k = int(k) -1
    except ValueError:
        print("Input must be two numbers, however non-digit characters were received.")
        print(board)
        return False
    if r < 0 or r > Antal_rader:
        print(f"Den första siffran måste vara mellan 1 and {Antal_rader }.")
        print_board(board)
        return False
    if k < 0 or k > Antal_kolumner:
        print(f"Den andra siffran måste vara mellan 1 and {Antal_kolumner }.")
        print_board(board)
        return False
    
    if board[r][k]=="  ":
        print("Oops, det här blocket är redan uppätet")
        print_board(board)
        return False
    
    return True    
      
def update_board(board,r,k):# Äter rutor

    for i in range(k-1, Antal_kolumner):
        for j in range(r-1, Antal_rader):
            board[j][i]="  "        

def new_turn(board,a): # Väljer vem som går först och byter tur
    b=a%2
    valid_input=False
    while not valid_input:
        if b>0:
            print()
            print("spelare 1 tur")
            player_choice=input("Välj rad och kolumn-nummer med ett mellanslag mellan ")
            valid_input=check_valid_input(player_choice, board)
           
        else:
            print()
            print("Spelare 2 tur")
            player_choice=input("Välj rad och kolumn-nummer med ett mellanslag mellan ")
            valid_input=check_valid_input(player_choice, board)
           
    r,k=player_choice.split()
    return int(r), int(k)

def play_again(): #Startar om spelet
    print("Vill du spela igen? (ja eller nej)")
    return input().lower().startswith("j")    

def main(): #Huvudfunktion där alla funktioner åkallas.
    print_instructions()
    while True: #Evighetsloop
        a=random.randint(1,2)
        board = []
        for i in range(1,Antal_rader+1):
            r = []
            for j in range(1,Antal_kolumner+1):
                    r.append(str(int(str(i)+str(j))))
            board.append(r)

    

        board[0][0] = "P "
        game_is_playing = True        
        
        print()
        while game_is_playing: #Evighetsloop efter första brädet är skapat tills
            
            print_board(board)
            r,k=new_turn(board,a)
            
            
            a=a+1 #räknare för new_turn
            if board[r-1][k-1] == "P ":
                b=a%2
                if b>0:    
                    print()
                    print("Spelare 1 vinner!")
                    game_is_playing = False
                else:
                    print()
                    print("Spelare 2 vinner!")
                    game_is_playing = False
            else:
                update_board(board,r,k)
        if not play_again():
            print("Hejdå")
            break





main()
